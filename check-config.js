// Script de v√©rification de la configuration
// √Ä ex√©cuter avec : node check-config.js

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log('üîç V√©rification de la configuration...\n');

// V√©rifier le fichier .env
const envPath = path.join(__dirname, '.env');
if (fs.existsSync(envPath)) {
  console.log('‚úÖ Fichier .env trouv√©');
  const envContent = fs.readFileSync(envPath, 'utf8');
  
  if (envContent.includes('your-project.supabase.co')) {
    console.log('‚ö†Ô∏è  ATTENTION: Variables d\'environnement Supabase non configur√©es');
    console.log('   Veuillez modifier le fichier .env avec vos vraies cl√©s Supabase');
  } else {
    console.log('‚úÖ Variables d\'environnement Supabase configur√©es');
  }
} else {
  console.log('‚ùå Fichier .env manquant');
  console.log('   Cr√©ation du fichier .env...');
  
  const envContent = `# Variables d'environnement Supabase
# Remplacez ces valeurs par vos propres cl√©s Supabase

VITE_SUPABASE_URL=https://your-project.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-key-here
`;
  
  fs.writeFileSync(envPath, envContent);
  console.log('‚úÖ Fichier .env cr√©√©');
}

// V√©rifier les d√©pendances
const packagePath = path.join(__dirname, 'package.json');
if (fs.existsSync(packagePath)) {
  console.log('‚úÖ package.json trouv√©');
  
  const packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf8'));
  const requiredDeps = ['@supabase/supabase-js', 'react', 'react-dom', 'react-router-dom'];
  
  const missingDeps = requiredDeps.filter(dep => !packageJson.dependencies[dep]);
  
  if (missingDeps.length > 0) {
    console.log('‚ùå D√©pendances manquantes:', missingDeps.join(', '));
    console.log('   Ex√©cutez: npm install');
  } else {
    console.log('‚úÖ Toutes les d√©pendances requises sont install√©es');
  }
} else {
  console.log('‚ùå package.json manquant');
}

// V√©rifier les fichiers TypeScript
const srcPath = path.join(__dirname, 'src');
if (fs.existsSync(srcPath)) {
  console.log('‚úÖ Dossier src trouv√©');
  
  const requiredFiles = [
    'App.tsx',
    'main.tsx',
    'lib/supabase.ts',
    'store/useAuthStore.ts',
    'store/useAppStore.ts'
  ];
  
  const missingFiles = requiredFiles.filter(file => {
    const filePath = path.join(srcPath, file);
    return !fs.existsSync(filePath);
  });
  
  if (missingFiles.length > 0) {
    console.log('‚ùå Fichiers manquants:', missingFiles.join(', '));
  } else {
    console.log('‚úÖ Tous les fichiers requis sont pr√©sents');
  }
} else {
  console.log('‚ùå Dossier src manquant');
}

console.log('\nüìã Actions recommand√©es:');
console.log('1. Configurez vos variables d\'environnement Supabase dans .env');
console.log('2. Ex√©cutez le script SQL fix-rls-policies.sql dans Supabase');
console.log('3. Red√©marrez le serveur de d√©veloppement: npm run dev');
console.log('4. Testez la cr√©ation d\'√©v√©nements apr√®s connexion'); 